/*
1. Write a return method that check if a string is build out of the same
letters as another string.
Ex: same("abc", "cab"); -> true , same("abc", "abb"); -> false:
2. Write a return method that can remove the duplicated values
from String
Ex: removeDup("AAABBBCCC") ==> ABC
3. Write a return method that can find the unique characters from the
String
Ex: unique("AAABBBCCCDEF") ==> "DEF";
4. Write a return method that can reverse String
Ex: Reverse("ABCD"); ==> DCBA
5. Write a return method that can find the frequency of
characters
Ex: FrequencyOfChars("AAABBCDD") ==> A3B2C1D2
6. Write a return method that can verify if a password is valid or not.
requirements:
1. Password MUST be at least have 6 characters and should not contain space
2. PassWord should at least contain one upper case letter
3. PassWord should at least contain one lowercase letter
4. Password should at least contain one special characters
5. Password should at least contain a digit
if all requirements above are met, the method returns true, otherwise
returns false
7. Write a method that can find the maximum number from an int
Array
8. Write a method that can find the minimum number from an int
Array
9. Write a return method that can sort an int array in Ascending
order without using the sort method of the Arrays class
Ex:
int[] arr = {10, 9, 8, 7};
arr = Sort(arr); ==>{ 7, 8, 9, 10};
10. Write a return method that can sort an int array in descending order
without using the sort method of the Arrays class
Ex: int[] arr = {10,20,7, 8, 90};
arr = Sort(arr); ==> {90, 20, 10, 8, 7};
*/